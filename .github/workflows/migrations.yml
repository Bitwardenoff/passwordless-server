name: migrations

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - published
  workflow_dispatch:

env:
  # Setting these variables allows .NET CLI to use rich color codes in console output
  TERM: xterm
  DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: true
  # Skip boilerplate output
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  # Checks if the diff contains database changes
  check:
    strategy:
      matrix:
        app:
          - Api
          - AdminConsole
        include:
          - app: Api
            ef-context: DbGlobalMsSqlContext
          - app: AdminConsole
            ef-context: MssqlConsoleDbContext

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Install .NET
        uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # v4.0.0

      - name: Install Entity Framework toolkit
        run: dotnet tool install dotnet-ef --global

      - name: Get pending migrations
        run: >
          dotnet ef migrations list
          --configuration Release
          --project src/${{ matrix.app }}
          --context ${{ matrix.ef-context }}
          --json
          --prefix-output
          --no-connect
          | grep -E '^data:'
          | sed -E 's/^data: (.*)$/\1/'
          | jq -r '.[] | .Id'
          | tee migrations.txt

      - name: Produce summary
        run: |
          $diff=$(git diff --name-only \
            ${{ github.event.pull_request.base.sha || 'HEAD~1' }} \
            ${{ github.event.pull_request.head.sha }})

          $pending=()
          for $migration in $(cat migrations.txt); do
            if echo $diff | grep -q $migration; then
              $pending += $migration
            fi
          done

          if [ ${#pending[@]} -gt 0 ]; then
            echo "### Pending migrations for ${{ matrix.app }} (${{ matrix.ef-context }})" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

            for $migration in $pending; do
              echo $migration >> $GITHUB_STEP_SUMMARY
            done

            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "No pending migrations for ${{ matrix.app }} (${{ matrix.ef-context }})" >> $GITHUB_STEP_SUMMARY
          fi

  # Generates idempotent SQL scripts for new migrations
  script:
    strategy:
      matrix:
        app:
          - Api
          - AdminConsole
        include:
          - app: Api
            ef-context: DbGlobalMsSqlContext
          - app: AdminConsole
            ef-context: MssqlConsoleDbContext

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install .NET
        uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # v4.0.0

      - name: Install Entity Framework toolkit
        run: dotnet tool install dotnet-ef --global

      - name: Generate script
        run: >
          dotnet ef migrations script
          --configuration Release
          --project src/${{ matrix.app }}
          --context ${{ matrix.ef-context }}
          --idempotent
          --output migrations.sql

      - name: Produce summary
        run: |
          echo "### Idempotent migrations for ${{ matrix.app }} (${{ matrix.ef-context }})" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`sql" >> $GITHUB_STEP_SUMMARY
          cat migrations.sql >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
