@using Microsoft.Extensions.Options
@inject IOptions<PasswordlessOptions> Options
@model PasskeysModel

<div id="xapp" class="flex flex-col gap-10">
    {{showDetails}}
    <div class="">

        <form asp-page-handler="removeCredential" method="post">
            <div class="flex flex-wrap gap-5 mb-3">
                @foreach (var cred in Model.Credentials)
                {
                    <div class="overflow-hidden bg-white shadow sm:rounded-lg max-w-fit">
                        <div class="px-4 py-5 sm:px-6">
                            <h3 class="text-base font-semibold leading-6 text-gray-900">@cred.Device</h3>
                            <p class="mt-1 max-w-2xl text-sm text-gray-500">@(cred.Nickname ?? "No nickname")</p>
                            <dl class="mt-2">
                                <div class="flex items-center">
                                    <dt class="text-sm font-medium text-gray-500 mr-2">Created:</dt>
                                    <dd class="text-sm text-gray-900"><asp-local-time datetime="@cred.CreatedAt" /></dd>
                                </div>
                                <div class="flex items-center">
                                    <dt class="text-sm font-medium text-gray-500 mr-2">Last used:</dt>
                                    <dd class="text-sm text-gray-900"><asp-local-time datetime="@cred.LastUsedAt" /></dd>
                                </div>

                                <button
                                    type="button"
                                    v-cloak
                                    v-on:click="onShow"
                                    v-if="!showDetails"
                                    class="block mt-2 mr-auto rounded py-1 text-xs font-semibold focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-red-600">
                                    Show more
                                </button>
                            </dl>
                        </div>
                        <div v-if="showDetails" class="border-t border-gray-200 px-4 py-5 sm:px-6">
                            <dl class="grid grid-cols-1 gap-x-4 gap-y-8 sm:grid-cols-2">
                                <div class="sm:col-span-2">
                                    <dt class="text-sm font-medium text-gray-500">Credential Id</dt>
                                    <dd class="mt-1 text-sm text-gray-900 font-mono">@cred.Descriptor.Id.ToBase64Url()</dd>
                                </div>
                                <div class="sm:col-span-2">
                                    <dt class="text-sm font-medium text-gray-500">Public Key</dt>
                                    <dd class="mt-1 text-sm text-gray-900 font-mono">@cred.PublicKey.ToBase64Url()</dd>
                                </div>

                                <div class="sm:col-span-1">
                                    <dt class="text-sm font-medium text-gray-500">Type</dt>
                                    <dd class="mt-1 text-sm text-gray-900">@cred.AttestationFmt</dd>
                                </div>
                                <div class="sm:col-span-1">
                                    <dt class="text-sm font-medium text-gray-500">Counter</dt>
                                    <dd class="mt-1 text-sm text-gray-900">@cred.SignatureCounter</dd>
                                </div>
                                <div class="sm:col-span-1">
                                    <dt class="text-sm font-medium text-gray-500">RPID</dt>
                                    <dd class="mt-1 text-sm text-gray-900 font-mono">@cred.RPID</dd>
                                </div>
                                <div class="sm:col-span-1">
                                    <dt class="text-sm font-medium text-gray-500">Origin</dt>
                                    <dd class="mt-1 text-sm text-gray-900">@cred.Origin</dd>
                                </div>

                                <div class="sm:col-span-2">
                                    <dt class="text-sm font-medium text-gray-500">AaGuid</dt>
                                    <dd class="mt-1 text-sm text-gray-900 font-mono">@cred.AaGuid</dd>
                                </div>
                            </dl>
                        </div>
                        <div v-if="showDetails" class="border-t border-gray-200 px-4 py-5 sm:px-6 flex">
                            <button
                                type="button"
                                v-on:click="onShow"
                                v-cloak
                                class="block mr-auto rounded py-1 text-xs font-semibold focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-red-600">
                                Show less
                            </button>
                            <button
                                type="submit"
                                name="credentialId" value="@cred.Descriptor.Id.ToBase64Url()"
                                class="block ml-auto rounded bg-red-600 py-1 px-2 text-xs font-semibold text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-red-600">
                                Remove
                            </button>
                        </div>
                    </div>
                }</div>
        </form>

        <form v-on:submit="registerCredential">
            <div class="mt-2 flex">
                <div class="relative flex flex-grow items-stretch focus-within:z-10  max-w-md">
                    <input
                        type="text" name="nickname" id="nickname" placeholder="Enter a nickname (e.g. My Work laptop) for this security key"
                        class="block w-full rounded-none rounded-l-md border-0 py-2 px-2 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6">
                </div>
                <button type="submit" class="relative -ml-px inline-flex items-center gap-x-1.5 rounded-r-md px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50">
                    Add Passkey
                </button>
            </div>
        </form>
    </div>
</div>

<partial name="Shared/_PasswordlessClientJs" />

    <script async defer type="module">
    import { createApp, ref } from 'vue';
    createApp({
        setup() {
            const showDetails = ref(false);
            const onShow = () => {
                showDetails.value = !showDetails.value;
            }
            const p = new Passwordless.Client({
                apiUrl: "@Options.Value.ApiUrl",
                apiKey: "@Options.Value.ApiKey"
            });

            const registerCredential = async (e) => {
                e.preventDefault();
                var data = new FormData(e.target);
                var req = await fetch("/passwordless-add-credential", {
                    method: "POST",
                    body: JSON.stringify({ displayName: data.get("nickname")}),
                    headers: {
                        "Content-Type": "application/json"
                    }
                });

                if (req.ok) {
                    const token = await req.json();

                    const nicknameForDevice = data.get("nickname");
                    console.log("token nickname", nicknameForDevice);
                    await p.register(token, nicknameForDevice);
                    document.location.reload();
                }
            }

            return {
                registerCredential,
                showDetails,
                onShow
            }
        }
    }).mount('#xapp');
    </script>
