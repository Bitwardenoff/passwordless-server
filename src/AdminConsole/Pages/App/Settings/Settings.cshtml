@page "/settings"
@using Passwordless.AdminConsole.Components.Pages.App.Settings.SettingsComponents
@model SettingsModel

@{
    ViewData["Title"] = "Settings";
}

<component type="typeof(PlanSection)" render-mode="Static" />

<component type="typeof(ApiKeysSection)" render-mode="Static" />

<component type="typeof(MagicLinksSection)" render-mode="Static" />

<component type="typeof(ManuallyGeneratedAuthenticationTokensSection)" render-mode="Static" />

@if (Model.IsAttestationAllowed)
{
    <component type="typeof(AttestationSection)" render-mode="Static" />
}

<component type="typeof(AuthenticationConfiguration)" render-mode="Static" />

<panel header="Delete Application">
    @if (Model.PendingDelete)
    {
        <form method="post" asp-page-handler="Cancel">
            <danger-alert-box message="'@Model.ApplicationId' will be deleted on '@Model.DeleteAt?.ToString("g") UTC'. If you would like to cancel this action, click 'Cancel'."></danger-alert-box>
            <button id="btn-cancel-delete" class="btn-secondary mt-3" type="submit">Cancel</button>
        </form>
    }
    else
    {
        <form method="post" asp-page-handler="Delete">
            @if (!Model.CanDeleteImmediately)
            {
                <p>
                    Because your application contains credentials, <strong>you cannot delete it immediately</strong>. Instead, the following will happen once you choose to delete the application:
                </p>

                <ul role="list" class="list-decimal list-inside my-2">
                    <li class="">No data will be deleted immediately.</li>
                    <li>Your API Keys will be frozen - meaning no authentication calls can be made.</li>
                    <li>Admins can cancel the process at any time. The API will return to normal behavior.</li>
                    <li>If the process has not been aborted within 30 days, data will be deleted permanently.</li>
                </ul>
            }

            <div id="deleteApplication"></div>
        </form>
    }
</panel>

@section Scripts
{
    <script type="module">
    import { createApp } from 'vue';
    import DeleteApplication from '@Url.Content("~/js/deleteapplication.mjs")';

    createApp(DeleteApplication, {
        appId: "@(Model.ApplicationId)"
    }).mount('#deleteApplication');

    </script>
}
