@page "/onboarding/get-started"
@model GetStarted
@{
    ViewData["Title"] = "Getting Started";
}
<p class="mb-3">Let's get set up using Passwordless.dev. Please feel free to read all the <a target="_blank" href="https://docs.passwordless.dev" class="underline">documentation</a>.</p>

<div class="bg-white shadow sm:rounded-lg">
    <div class="px-4 py-5 sm:p-6" id="apikeys">
        <h3 class="text-base font-semibold leading-6 text-gray-900">1. Your API Keys</h3>
        <div class="mt-2 max-w-xl text-sm text-gray-500">
            <p>Here are your API keys. You will use these to access the Passwordless api. The Api Key is used client side and is safe to share, while the ApiSecret is used on your backend and should never be exposed.</p>
        </div>

        <div class="mt-5 max-w-3xl  rounded-md bg-gray-50 px-6 py-5 sm:flex sm:items-start sm:justify-between">
            <div class="sm:flex sm:items-start">
                <div class="mt-3 sm:ml-4 sm:mt-0">
                    <copy-text title="API Url" value="@Model.ApiUrl"></copy-text>
                    <copy-text title="Public API Key" value="@Model.Onboarding.ApiKey"></copy-text>
                    <copy-text title="Private API Key" value="@Model.Onboarding.ApiSecret" type="password"></copy-text>
                    <div class="mt-1 text-sm font-medium text-red-900">Download and store them safely! They will be removed from this area in 7 days.</div>
                </div>
            </div>
            <div class="mt-4 sm:ml-6 sm:mt-0 sm:flex-shrink-0">
                <button @@click="onSave" type="button" class="inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50">ðŸ”’ Download</button>
            </div>
        </div>

    </div>
</div>

<div class="mt-5 bg-white shadow sm:rounded-lg">
    <div class="px-4 py-5 sm:p-6">
        <h3 class="text-base font-semibold leading-6 text-gray-900">2. Backend language</h3>
        <div class="mt-2 max-w-xl text-sm text-gray-500">
            <p>Passwordless.dev works with <strong>all backend languages</strong> using a normal REST API. But for some languages, we've made official packages, sdks and examples.</p>
        </div>

        <div id="backend"></div>
    </div>
</div>

<div class="mt-5 bg-white shadow sm:rounded-lg">
    <div class="px-4 py-5 sm:p-6">
        <h3 class="text-base font-semibold leading-6 text-gray-900">3. Frontend framework</h3>
        <div class="mt-2 max-w-xl text-sm text-gray-500">
            <p>Passwordless.dev uses a little bit of javascript and html. It works regardless if you're using a framework or not! For some frameworks, we've made official packages, sdks and examples.</p>
        </div>

        <div id="frontend"></div>
    </div>
</div>

<h2 class="mt-16 text-xl font-semibold text-gray-900 mb-8">Let's start coding!</h2>

<div class="mt-5 bg-white shadow sm:rounded-lg">
    <div class="px-4 py-5 sm:p-6">
        <h3 class="text-base font-semibold leading-6 text-gray-900">4. Follow our Getting Started guide</h3>
        <div class="mt-2 max-w-xl text-sm text-gray-500">
            <p>Please take a look at our Getting Started guide to learn how register your first credential. Or you can use the <a class="link-blue"href="@Url.Page("/app/playground/client")">Playground</a> here in the admin console to experiment.</p>
        </div>
        <div class="mt-6 flex">
          <a target="_blank" href="https://docs.passwordless.dev/guide/get-started.html" class="text-sm font-semibold text-primary-700">View the Getting Started guide <span aria-hidden="true">&rarr;</span></a>
        </div>
        <code>
            
        </code>
    </div>
</div>

<div class="mt-5 bg-white shadow sm:rounded-lg">
<div class="px-4 py-5 sm:p-6">
    <h3 class="text-base font-semibold leading-6 text-gray-900">Frontend</h3>
    <div class="mt-2 max-w-xl text-sm text-gray-500">
        <p>Passwordless.dev uses a little bit of javascript and html. It works regardless if you're using a framework or not! For some frameworks, we've made official packages, sdks and examples.</p>
    </div>

    <div class="mt-6 flex">
        <a target="_blank" href="https://docs.passwordless.dev/guide/js-client.html#installation" class="text-sm font-semibold text-primary-700">View the frontend docs <span aria-hidden="true">&rarr;</span></a>
    </div>
</div>
</div>

<div class="mt-5 bg-white shadow sm:rounded-lg">
    <div class="px-4 py-5 sm:p-6">
        <h3 class="text-base font-semibold leading-6 text-gray-900">Backend</h3>
        <div class="mt-2 max-w-xl text-sm text-gray-500">
            <p>You need to do a API call from your backend. It works with all languages, as long as you can make a HTTP call. For some languages, we've made official packages, sdks and examples.</p>
        </div>
        <div class="mt-6 flex gap-10">
            <a target="_blank" href="https://docs.passwordless.dev/guide/backend.html" class="text-sm font-semibold text-primary-700">View the backend examples <span aria-hidden="true">&rarr;</span></a>
            <a target="_blank" href="https://docs.passwordless.dev/guide/api.html" class="text-sm font-semibold text-primary-700">Read the API docs <span aria-hidden="true">&rarr;</span></a>
        </div>
    </div>
    @* <div class="px-4 py-5 flow-root"> *@
    @*     <ul role="list" class="mb-8"> *@
    @*         <li> *@
    @*             <div class="relative pb-8"> *@
    @*                 <span class="absolute left-5 top-5 -ml-px h-full w-0.5 bg-gray-200" aria-hidden="true"></span> *@
    @*                 <div class="relative flex items-start space-x-3"> *@
    @*                     <div> *@
    @*                         <div class="relative px-1"> *@
    @*                             <div class="flex h-8 w-8 items-center justify-center rounded-full bg-gray-100 ring-8 ring-white"> *@
    @*                                 <svg class="h-5 w-5 text-gray-500" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"> *@
    @*                                     <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-5.5-2.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zM10 12a5.99 5.99 0 00-4.793 2.39A6.483 6.483 0 0010 16.5a6.483 6.483 0 004.793-2.11A5.99 5.99 0 0010 12z" clip-rule="evenodd"/> *@
    @*                                 </svg> *@
    @*                             </div> *@
    @*                         </div> *@
    @*                     </div> *@
    @*                     <div class="min-w-0 flex-1 py-1.5"> *@
    @*                         <div class="text-sm text-gray-500"> *@
    @*                             Waiting for new requests... *@
    @*                             <span class="whitespace-nowrap">0s ago</span> *@
    @*                         </div> *@
    @*                     </div> *@
    @*                 </div> *@
    @*             </div> *@
    @*         </li> *@
    @*         <li> *@
    @*             <div class="relative pb-8"> *@
    @*                 <span class="absolute left-5 top-5 -ml-px h-full w-0.5 bg-gray-200" aria-hidden="true"></span> *@
    @*                 <div class="relative flex items-start space-x-3"> *@
    @*                     <div> *@
    @*                         <div class="relative px-1"> *@
    @*                             <div class="flex h-8 w-8 items-center justify-center rounded-full bg-gray-100 ring-8 ring-white"> *@
    @*                                 <svg class="h-5 w-5 text-gray-500" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"> *@
    @*                                     <path fill-rule="evenodd" d="M5.5 3A2.5 2.5 0 003 5.5v2.879a2.5 2.5 0 00.732 1.767l6.5 6.5a2.5 2.5 0 003.536 0l2.878-2.878a2.5 2.5 0 000-3.536l-6.5-6.5A2.5 2.5 0 008.38 3H5.5zM6 7a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd"/> *@
    @*                                 </svg> *@
    @*                             </div> *@
    @*                         </div> *@
    @*                     </div> *@
    @*                     <div class="min-w-0 flex-1 py-0"> *@
    @*                         <div class="text-sm leading-8 text-gray-500"> *@
    @*                             <span class="mr-0.5"> *@
    @*                                 <a href="#" class="font-medium text-gray-900">5 requests to 'signin'</a> *@
    @*                                 with the following data *@
    @*                             </span> *@
    @*                             <span class="mr-0.5"> *@
    @*                                 <a href="#" class="relative inline-flex items-center rounded-full px-2.5 py-1 text-xs ring-1 ring-inset ring-gray-300 hover:bg-gray-50"> *@
    @*                                     <span class="absolute flex flex-shrink-0 items-center justify-center"> *@
    @*                                         <span class="h-1.5 w-1.5 rounded-full bg-rose-500" aria-hidden="true"></span> *@
    @*                                     </span> *@
    @*                                     <span class="ml-3 font-semibold text-gray-900">Signin</span> *@
    @*                                 </a> *@
    @*                                 <a href="#" class="relative inline-flex items-center rounded-full px-2.5 py-1 text-xs ring-1 ring-inset ring-gray-300 hover:bg-gray-50"> *@
    @*                                     <span class="absolute flex flex-shrink-0 items-center justify-center"> *@
    @*                                         <span class="h-1.5 w-1.5 rounded-full bg-indigo-500" aria-hidden="true"></span> *@
    @*                                     </span> *@
    @*                                     <span class="ml-3 font-semibold text-gray-900">Origin: https://localhost:5050</span> *@
    @*                                 </a> *@
    @*                             </span> *@
    @*                             <span class="whitespace-nowrap">5m ago</span> *@
    @*                         </div> *@
    @*                     </div> *@
    @*                 </div> *@
    @*             </div> *@
    @*         </li> *@
    @*     </ul> *@
    @* </div> *@
</div>

@section Scripts
{
    <script type="module" src="@Url.Content("~/js/elements/copy-text.mjs")"></script>
    <script type="module">
    import { createApp } from 'vue';
    import RadioBoxes from '@Url.Content("~/js/radioboxes.mjs")'
    createApp(RadioBoxes, {
        items: [{
            title: 'No Framework',
            desc: 'Just vanilla JS. Docs + Example'
        },
        {
            title: 'Vue',
            desc: 'Docs'
        },
        {
            title: 'React',
            desc: 'Docs'
        }]  
    } ).mount('#frontend');
    createApp(RadioBoxes, {
            items: [
            {
                title: 'Other',
                desc: 'Use our simple HTTP Rest API'
            },
            {
                title: 'ASP.NET Core',
                desc: 'Docs + Examples'
            },
            {
                title: 'Node.js',
                desc: 'Docs + Examples'
            },
            {
                title: 'PHP',
                desc: 'Docs'
            },
            {
                title: 'Python',
                desc: 'Docs'
            },
            
            ]  
        } ).mount('#backend')
        </script>

<script type="module">
    import { createApp, ref } from 'vue';
    createApp({
        setup() {            
            const onSave = () => {                
                let fileContents = "This is your API key and secret. Please save them to a safe place. \n"
                fileContents += "Read the docs at https://docs.passwordless.dev";
                //fileContents += "Email: " + email.value + "\n";
                // store apikey on first line and apisecret on second line
                fileContents += "\nAPI Url: @Model.ApiUrl";
                fileContents += "\nPublic ApiKey: @Model.Onboarding.ApiKey";
                fileContents += "\nPrivate ApiSecret: @Model.Onboarding.ApiSecret";
            
                save("passwordless-apikeys-@Model.Onboarding.ApplicationId\.txt", fileContents);
                }
            
            return {
                onSave        
            }
        }
        
    
    }).mount('#apikeys');
    
    const save = (filename, data) => {
        const blob = new Blob([data], { type: "text/csv" });
        const nav = window.navigator;
        if (nav.msSaveOrOpenBlob) {
            nav.msSaveBlob(blob, filename);
        } else {
            const elem = window.document.createElement("a");
            elem.href = window.URL.createObjectURL(blob);
            elem.download = filename;
            document.body.appendChild(elem);
            elem.click();
            document.body.removeChild(elem);
        }
    }
</script>
}