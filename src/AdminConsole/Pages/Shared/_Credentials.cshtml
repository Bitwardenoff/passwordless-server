@using Passwordless.AdminConsole.Helpers
@using Passwordless.AdminConsole.TagHelpers
@using Passwordless.Common.Extensions
@model CredentialsModel

<div id="credentialsApp" class="flex flex-col gap-10">
    <div>
        <form asp-page-handler="RemoveCredential" method="post">
            <div class="flex flex-wrap gap-5 mb-3">
                @foreach (var cred in Model.Items)
                {
                    <div class="@(cred.IsNew() ? "credential-card-new" : "credential-card")">
                        <div class="px-4 py-5 sm:px-6">
                            @if (cred.IsAuthenticatorKnown)
                            {
                                <h3><img asp-if="1 == 0" src="@cred.Icon" /><span>@cred.AuthenticatorName</span></h3>
                                @if (string.IsNullOrEmpty(cred.Nickname))
                                {
                                    <p class="mt-1 max-w-2xl text-sm text-gray-500">@cred.Device</p>
                                }
                                else
                                {
                                    <p class="mt-1 max-w-2xl text-sm text-gray-500">@(cred.Nickname ?? "No nickname") on @cred.Device</p>
                                }
                            }
                            else
                            {
                                <h3>@cred.Device</h3>
                                <p asp-if="!string.IsNullOrEmpty(cred.Nickname)" class="mt-1 max-w-2xl text-sm text-gray-500">cred.Nickname</p>

                            }
                            <dl class="mt-2">
                                <div class="summary-property">
                                    <dt class="property-label">Created:</dt>
                                    <dd class="property-label">
                                        <asp-local-time datetime="@cred.CreatedAt"/>
                                    </dd>
                                </div>
                                <div class="summary-property">
                                    <dt class="property-label mr-2">Last used:</dt>
                                    <dd class="text-sm text-gray-900">
                                        <asp-local-time datetime="@cred.LastUsedAt"/>
                                    </dd>
                                </div>

                                @if (!Model.HideDetails)
                                {
                                    <div class="credential-card-summary-footer">
                                        <button
                                            type="button"
                                            v-cloak
                                            v-on:click="onShow('@cred.DescriptorId')"
                                            v-if="!showDetails('@cred.DescriptorId')"
                                            class="block rounded py-1 text-xs font-semibold focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-red-600">
                                            Show more
                                        </button>
                                        @if (cred.IsNew())
                                        {
                                            <badge v-if="!showDetails('@cred.DescriptorId')" variant="ColorVariant.Success" text="New"></badge>
                                        }
                                    </div>
                                }
                            </dl>
                        </div>
                        @if (!Model.HideDetails)
                        {
                        <div v-if="showDetails('@cred.DescriptorId')" class="border-t border-gray-200 px-4 py-5 sm:px-6">
                            <dl class="grid grid-cols-1 gap-x-4 gap-y-8 sm:grid-cols-2">
                                <div class="details-property details-property sm:col-span-2">
                                    <dt class="property-label">Credential Id</dt>
                                    <dd class="property-value font-mono">@cred.DescriptorId</dd>
                                </div>
                                <div class="details-property sm:col-span-2">
                                    <dt class="property-label">Public Key</dt>
                                    <dd class="property-value font-mono">@cred.PublicKey.ToBase64Url()</dd>
                                </div>

                                <div class="details-property sm:col-span-1">
                                    <dt class="property-label">Type</dt>
                                    <dd class="property-value">@cred.AttestationFmt</dd>
                                </div>
                                <div class="details-property sm:col-span-1">
                                    <dt class="property-label">Counter</dt>
                                    <dd class="property-value">@cred.SignatureCounter</dd>
                                </div>
                                <div class="details-property sm:col-span-1">
                                    <dt class="property-label">RPID</dt>
                                    <dd class="property-value font-mono">@cred.RPID</dd>
                                </div>
                                <div class="details-property sm:col-span-1">
                                    <dt class="property-label">Origin</dt>
                                    <dd class="property-value">@cred.Origin</dd>
                                </div>

                                <div class="details-property sm:col-span-2">
                                    <dt class="property-label">AaGuid</dt>
                                    <dd class="property-value font-mono">@cred.AaGuid</dd>
                                </div>
                                
                                <div class="details-property sm:col-span-1">
                                    <dt class="property-label">Discoverable</dt>
                                    <dd class="property-value">@(cred.IsDiscoverable.HasValue ? cred.IsDiscoverable.Value : "Unknown")</dd>
                                </div>
                                
                                <div class="details-property sm:col-span-1">
                                    <dt class="property-label">Backup State / Synced</dt>
                                    <dd class="property-value">@(cred.BackupState.HasValue ? cred.BackupState.Value : "Unknown")</dd>
                                </div>
                                
                                <div class="details-property sm:col-span-1">
                                    <dt class="property-label">Backup Eligibility</dt>
                                    <dd class="property-value">@(cred.IsBackupEligible.HasValue ? cred.IsBackupEligible.Value : "Unknown")</dd>
                                </div>
                            </dl>
                        </div>
                        <div v-if="showDetails('@cred.DescriptorId')" class="border-t border-gray-200 px-4 py-5 sm:px-6 flex">
                            <button
                                type="button"
                                v-on:click="onShow('@cred.DescriptorId')"
                                v-cloak
                                class="block mr-auto rounded py-1 text-xs font-semibold focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-red-600">
                                Show less
                            </button>
                            <button
                                type="submit"
                                name="credentialId" value="@cred.DescriptorId"
                                class="block ml-auto rounded bg-red-600 py-1 px-2 text-xs font-semibold text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-red-600">
                                Remove
                            </button>
                        </div>
                        }
                    </div>
                }
            </div>
        </form>
    </div>
</div>

@Html.PartialSectionScripts(@<script type="module">
import { createApp, ref } from 'vue';

createApp({
    setup() {
        const visibleCreds = ref({});
        const showDetails = (id) => {
            return visibleCreds.value[id];
        };
        const onShow = (id) => {
            visibleCreds.value[id] = !visibleCreds.value[id];
        };
        
        return {
            showDetails,
            onShow
        };
    }
}).mount('#credentialsApp');
</script>)