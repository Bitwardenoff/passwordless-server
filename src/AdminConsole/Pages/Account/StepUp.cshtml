@page
@using Microsoft.Extensions.Options
@using Passwordless.AspNetCore
@model StepUp

@inject IOptions<PasswordlessAspNetCoreOptions> PasswordlessOptions;

@{
    ViewData["Title"] = "Step Up";
}

@section Scripts
{
    <script type="module">
        import { Client } from '@Url.Content("~/js/client.js")';
        async function stepup() {
            const p = new Client(
                {
                    apiKey: "@PasswordlessOptions.Value.ApiKey",
                    apiUrl: "@PasswordlessOptions.Value.ApiUrl"
                });

            // sign in begin
            await p.stepup({ signinMethod: { userId: '@Model.Admin.Id' }})
                .catch(error => console.error(error))
                .then(async data => {
                    const stepUpResponse = await fetch('/account/stepup', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            stepUpToken: data.token,
                            returnUrl: '@Model.ReturnUrl',
                            purpose: '@Model.RequestedPurpose'
                        })
                    });

                if (stepUpResponse.ok) {
                    location.href = stepUpResponse.url;
                }
            });
        }
        document.getElementById("magic").addEventListener('click', () => {
            stepup();
        });
    </script>
}

<div class="block">
    <p>In order to access the organization settings, please re-authenticate.</p>

    <input type="hidden" asp-for="StepUpVerifyToken"/>

    <button id="magic" type="button" class="btn-primary">Proceed</button>

    <p>This page requires an elevated authorization using the "@Model.RequestedPurpose" context from step-up.</p>
</div>