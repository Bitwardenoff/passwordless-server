@using Passwordless.AdminConsole.Services.PasswordlessManagement
@using Passwordless.AdminConsole.EventLog.Loggers

@inject IPasswordlessManagementClient ManagementClient;
@inject  ICurrentContext CurrentContext;
@inject  IHttpContextAccessor HttpContextAccessor;
@inject  IEventLogger EventLogger;
@inject  NavigationManager NavigationManager;
@inject  ILogger<ApiKeysSection> Logger;

@if (!CurrentContext.IsPendingDelete)
{
    <Panel Header="Api Keys">
        <p>To learn more about API key management, read more <a class="link-blue underline" href="https://docs.passwordless.dev/guide/admin-console/applications.html#api-key-management" target="_blank">here</a>. To delete an API key, first lock the API key.</p>
    
        <EditForm class="flex" Model="CreateForm" FormName="@(CreateApiKeyFormName)" OnSubmit="OnCreateFormSubmitted">
            <button id="create-public-key-btn" class="btn-primary" name="CreateForm.Type" type="submit" value="public">Create Public Key</button>
            <button id="create-secret-key-btn" class="btn-primary ml-4" name="CreateForm.Type" type="submit" value="secret">Create Secret Key</button>
        </EditForm>
    
        <Table ColumnHeaders="@(new []{ "Api Key", "Created At", "Type", "Locked", "Scopes", string.Empty })" EmptyMessage="This application has no API Keys or API Secrets.">
            @if (ApiKeys != null)
            {
                @foreach (var apiKey in ApiKeys)
                {
                    <tr>
                        <td>@apiKey.Value</td>
                        <td><LocalDateTime Value="apiKey.CreatedAt" /></td>
                        <td>@apiKey.Type</td>
                        @if (apiKey.IsLocked)
                        {
                            <td class="bg-red-50">Yes, <LocalDateTime Value="apiKey.LastLockedAt!.Value" /></td>
                        }
                        else
                        {
                            <td>No</td>
                        }
                        <td>
                            <ul>
                                @foreach (var scope in apiKey.Scopes)
                                {
                                    <li>@scope</li>
                                }
                            </ul>
                        </td>
                        <td class="flex space-x-2 ml-0">
                            @if (apiKey.IsLocked)
                            {
                                <button class="btn-warning flex items-center" name="SelectedForm.Action" value="@UnlockAction" type="button" api-key-id="@apiKey.Id">
                                    <LockIcon Class="h-6 w-6" /> Unlock
                                </button>
                            }
                            else
                            {
                                <button class="btn-warning flex items-center" name="SelectedForm.Action" value="@LockAction" type="button" api-key-id="@apiKey.Id">
                                    <UnlockIcon Class="h-6 w-6" /> Lock
                                </button>
                            }
                            @if (apiKey.CanDelete)
                            {
                                <button class="btn-danger flex items-center" name="SelectedForm.Action" value="@DeleteAction" type="button" api-key-id="@apiKey.Id">
                                    <DeleteIcon Class="h-6 w-6" /> Delete
                                </button>
                            }
                        </td>
                    </tr>
                }
            }
        </Table>
    
        @if (Modal != null)
        {
            <SimpleAlert Model="Modal" />
                <SecureScript>
                    let selectedApiKeyId = null;
                    let selectedAction = null;
                    
                    document.getElementsByName('SelectedForm.Action').forEach(function (element) {
                        element.addEventListener('click', function (event) {
                            document.getElementById('@(Modal.ConfirmId)')
                            selectedApiKeyId = event.target.getAttribute('api-key-id');
                            selectedAction = event.target.value;
                            document.getElementById('@(Modal.TitleId)').innerText = `${selectedAction[0].toUpperCase() + selectedAction.slice(1)} API Key ${selectedApiKeyId}`;
                            document.getElementById('@(Modal.DescriptionId)').innerText = `Are you sure you want to ${selectedAction} API Key ${selectedApiKeyId}?`;
                            document.getElementById('@(Modal.Id)').classList.remove('hidden');
                        });
                    });
                    
                    document.getElementById('@(Modal.ConfirmId)').addEventListener('click', function () {
                        document.getElementById('@(Modal.Id)').classList.add('hidden');
                    
                        const url = '';
                        const formData = new FormData();
                                
                        const requestVerificationToken = document.getElementsByName("__RequestVerificationToken")[0];
                                
                        formData.append('_handler', '@(ConfirmedSelectedApiKeyFormName)');
                        formData.append('ConfirmedSelectedForm.ApiKeyId', selectedApiKeyId);
                        formData.append('ConfirmedSelectedForm.Action', selectedAction);
                                
                        fetch(url, {
                            method: 'POST',
                            body: formData,
                            headers: {
                                'RequestVerificationToken': requestVerificationToken.value
                            }
                        })
                        .then(() => document.location = document.location)
                        .catch(error => {
                            console.error('Error:', error);
                        })
                        .finally(() => {
                            selectedApiKeyId = null;
                            selectedAction = null;
                        });
                    });
                
                    document.getElementById('@(Modal.CancelId)').addEventListener('click', function () {
                        document.getElementById('@(Modal.Id)').classList.add('hidden');
                    });
                </SecureScript>
        }
    </Panel>
}